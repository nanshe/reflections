What happens when you initialize a repository? Why do you need to do it?

It creates the .git file which will track changes to files when they are 
committed. 


How is the staging area different from the working directory and the repository?
What value do you think it offers?

It's an temporary place to put files to be committed. It allows you to add some but not necessarily all files in the directory to the repository. 


How can you use the staging area to make sure you have one commit per logical change?

Add a change to the staging area and using git diff to compare working directory and staging area and use git diff --staged to compare staging area to the latest commit.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches help when you want to maintain different versions of an application or if 
developers are working on different features from the main branch.


How do the diagrams help you visualize the branch structure?

The diagrams showing the different branches, commit numbers/changes, definitely helps 
me visualize the branch structure.


What is the result of merging two branches together? Why do we represent it in 
the diagram the way we do?

Merging two branches together merges all the changes from the two branches in time
stamp order. We merge one branch into another, usually a branch into the master.


What are the pros and cons of Git's automatic merging vs. always doing merges manually?

pros - automatic merging saves you lots of time by merging things that obviously need 
to be in the final version. 
cons - not much other than you can see if something should not have been merged in
but would be with automatic merging


